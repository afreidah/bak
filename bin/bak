#!/usr/bin/env ruby

$LOAD_PATH.unshift File.expand_path('../../lib', __FILE__)
require 'bak'
require 'optparse'

options = {}
patternCount = 0
option_parser = OptionParser.new do |opts|
    opts.on("-d", "--date") do
        options[:date] = true
    end

    opts.on("-f", "--force") do
        options[:force] = true
    end

    opts.on("-n", "--no-bak") do
        options[:no_bak] = true
    end

    opts.on("-p POSTFIX") do |postfix|
        options[:postfix] = postfix
    end

    opts.on("-s PREFIX") do |prefix|
        options[:prefix] = prefix
    end

    opts.on("-t TARGETPATH") do |path|
	    options[:target_path] = path
    end	

    opts.on("-c", "--create") do
      options[:create_path] = true
    end

    opts.on("-R TEXT") do |text|
        options[:replace] ||= {}
        patternCount += 1
        options[:replace][:pattern] = Regexp.new(text) if patternCount == 1
        options[:replace][:replace] = text if patternCount == 2
    end

    opts.on("-v", "--version") do
      STDOUT.puts "Bak version: #{Bak::VERSION}"
      exit 0
    end
end
option_parser.parse!

# set defaults for values that weren't provided
options[:force] ||= false
options[:no_bak] ||= false

# make sure the create option is always paired with the target_path option
if options[:create_path] && !options[:target_path]
  STDERR.puts("please specify target directory to create with the -t option")
  exit 1
end

if ARGV.length > 0
    filenames = ARGV
else
    filenames = STDIN.read().split("\n")
end

filenames.each do |filename|
    generator = Bak::BackupNameGenerator.new(filename, options)
    copier = Bak::FileCopier.new(generator, STDERR)
    copier.start
end
